import React from 'react'

const All = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M11.0714 2.85718L13.0104 8.29925L17.8571 10L13.0104 11.7008L11.0714 17.1429L9.13236 11.7008L4.28564 10L9.13236 8.29925L11.0714 2.85718Z"
        stroke="white"
        stroke-width="1.66666"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M3.80949 2.5V5.83334M2.14282 4.16666H5.47616"
        stroke="white"
        stroke-width="1.66666"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M3.80949 14.1666V17.4999M2.14282 15.8333H5.47616"
        stroke="white"
        stroke-width="1.66666"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  )
}

const Opentelemetry = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M8.3875 10.4109L3.2375 11.5093C3.0376 11.5526 2.82866 11.5156 2.65587 11.4061C2.48308 11.2966 2.36033 11.1235 2.31417 10.9243L1.86667 9.13258C1.81406 8.91672 1.84393 8.68898 1.95045 8.49399C2.05696 8.299 2.23244 8.1508 2.4425 8.07842L13.6958 4.37842"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M11.3 9.78916L14.91 9.01917"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M13.3333 17.5001L10.7458 12.3251"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M13.7375 4.95001C13.6303 4.52125 13.6979 4.0675 13.9253 3.68853C14.1526 3.30957 14.5212 3.03643 14.95 2.92918L15.8583 2.70252C16.0726 2.64906 16.2993 2.68285 16.4886 2.79644C16.678 2.91003 16.8146 3.09415 16.8683 3.30835L18.1308 8.35835C18.1845 8.57273 18.1508 8.79967 18.0372 8.98923C17.9236 9.1788 17.7393 9.31547 17.525 9.36918L16.6166 9.59585C16.1879 9.70297 15.7341 9.63542 15.3551 9.40804C14.9762 9.18066 14.703 8.81208 14.5958 8.38335L13.7375 4.95001Z"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M5.13184 7.19421L6.06017 10.9075"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M6.66675 17.5001L9.25425 12.3251"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M10.0002 12.5C10.9206 12.5 11.6668 11.7538 11.6668 10.8333C11.6668 9.91282 10.9206 9.16663 10.0002 9.16663C9.07969 9.16663 8.3335 9.91282 8.3335 10.8333C8.3335 11.7538 9.07969 12.5 10.0002 12.5Z"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  )
}

const Kubernetes = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M5.62491 18.2113C5.89241 18.5588 6.29866 18.75 6.71741 18.75H13.2812C13.6999 18.75 14.1062 18.5438 14.3749 18.2075L18.4474 12.985C18.7149 12.6375 18.8074 12.1938 18.7149 11.7625L17.2587 5.25375C17.2141 5.0451 17.1228 4.84928 16.9916 4.68104C16.8604 4.5128 16.6927 4.37653 16.5012 4.2825L10.6087 1.395C10.4209 1.29924 10.2131 1.24953 10.0024 1.25C9.79241 1.25 9.58366 1.2975 9.39616 1.39375L3.50241 4.29375C3.31118 4.38801 3.14379 4.52436 3.01281 4.69258C2.88183 4.8608 2.79066 5.0565 2.74616 5.265L1.28991 11.775C1.18491 12.2063 1.28991 12.65 1.55741 12.9975L5.62491 18.21V18.2113Z"
        fill="#C0C1C3"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M15.9263 11.41C16.0488 11.4125 16.1713 11.4225 16.2925 11.44L16.365 11.4563L16.4038 11.4663C16.4565 11.4733 16.5072 11.4913 16.5527 11.5189C16.5981 11.5466 16.6374 11.5833 16.6679 11.6269C16.6985 11.6705 16.7196 11.7199 16.7301 11.7721C16.7406 11.8243 16.7401 11.878 16.7288 11.93C16.717 11.9823 16.6945 12.0315 16.6625 12.0744C16.6305 12.1174 16.5899 12.1532 16.5433 12.1795C16.4966 12.2058 16.4449 12.2219 16.3916 12.227C16.3383 12.232 16.2845 12.2258 16.2338 12.2088H16.2288L16.225 12.2075L16.2213 12.205C16.2088 12.2024 16.1963 12.1999 16.1838 12.1975L16.1213 12.185C16.0047 12.1475 15.8903 12.1032 15.7788 12.0525C15.5636 11.9657 15.3404 11.9 15.1125 11.8563C15.0336 11.854 14.9568 11.8827 14.8988 11.9363C14.8443 11.9259 14.7897 11.9163 14.735 11.9075C14.3644 13.0687 13.5796 14.0528 12.53 14.6725C12.5488 14.725 12.57 14.7763 12.5938 14.8263C12.555 14.8946 12.5447 14.9754 12.565 15.0513C12.6575 15.2638 12.7713 15.4663 12.9038 15.6563C12.9788 15.7538 13.0463 15.8563 13.1088 15.9613L13.1438 16.0325L13.1588 16.0638C13.2005 16.1329 13.2193 16.2135 13.2124 16.294C13.2055 16.3745 13.1733 16.4507 13.1204 16.5118C13.0676 16.5728 12.9967 16.6156 12.918 16.6339C12.8394 16.6522 12.7569 16.6452 12.6825 16.6138C12.633 16.5933 12.5883 16.5627 12.5513 16.524C12.5143 16.4852 12.4857 16.4392 12.4675 16.3888L12.455 16.3638C12.4429 16.3399 12.4312 16.3157 12.42 16.2913C12.3762 16.1769 12.3391 16.06 12.3088 15.9413C12.2423 15.7199 12.1544 15.5055 12.0463 15.3013C11.9993 15.2377 11.9293 15.1951 11.8513 15.1825L11.8138 15.1163L11.77 15.0363C10.6324 15.4658 9.37673 15.4627 8.24127 15.0275L8.15377 15.1838C8.09201 15.1933 8.03454 15.2212 7.98877 15.2638C7.85835 15.4771 7.75862 15.7077 7.69252 15.9488C7.66269 16.0675 7.62597 16.1844 7.58252 16.2988C7.5726 16.3199 7.56218 16.3407 7.55127 16.3613L7.53502 16.395C7.51701 16.4456 7.48857 16.493 7.45154 16.5319C7.41451 16.5707 7.36973 16.6013 7.3201 16.6217C7.27046 16.6421 7.2171 16.6518 7.16346 16.6502C7.10982 16.6487 7.05712 16.6358 7.00877 16.6125C6.93627 16.5779 6.87644 16.5214 6.83766 16.451C6.79888 16.3806 6.7831 16.2998 6.79252 16.22C6.79895 16.167 6.8164 16.1159 6.84377 16.07L6.86127 16.0325L6.89377 15.9675C6.95627 15.8613 7.02377 15.76 7.09877 15.6625C7.23377 15.4675 7.34877 15.26 7.44502 15.0425C7.45499 14.9686 7.44281 14.8933 7.41002 14.8263L7.48002 14.66C6.43437 14.0451 5.65001 13.0687 5.27502 11.915L5.10752 11.9438C5.04285 11.8979 4.96665 11.8711 4.88752 11.8663C4.65966 11.9096 4.43653 11.9749 4.22127 12.0613C4.10877 12.1113 3.99502 12.155 3.87877 12.1925C3.85806 12.1976 3.83722 12.2022 3.81627 12.2063L3.77877 12.215H3.77502L3.77252 12.2175H3.76627C3.70289 12.2379 3.63533 12.2414 3.57016 12.2278C3.505 12.2143 3.44447 12.184 3.39448 12.1401C3.34449 12.0961 3.30674 12.04 3.28493 11.9771C3.26312 11.9142 3.25798 11.8467 3.27002 11.7813C3.28537 11.7024 3.32514 11.6304 3.38369 11.5755C3.44225 11.5205 3.51663 11.4854 3.59627 11.475L3.60252 11.4738H3.60502L3.61252 11.4713C3.64252 11.4638 3.68002 11.4538 3.70752 11.4488C3.82877 11.4325 3.95127 11.4225 4.07377 11.42C4.30627 11.4038 4.53627 11.3663 4.76002 11.3075C4.82633 11.265 4.88229 11.2082 4.92377 11.1413L5.08377 11.095C4.91027 9.89122 5.18858 8.66581 5.86502 7.65503L5.74252 7.54628C5.73785 7.46713 5.71099 7.39089 5.66502 7.32628C5.48886 7.17518 5.29838 7.04163 5.09627 6.92753C4.98698 6.872 4.88097 6.81023 4.77877 6.74253L4.71877 6.69503L4.70002 6.67878L4.69502 6.67503C4.60792 6.61297 4.54899 6.51889 4.53118 6.41343C4.51337 6.30797 4.53813 6.19975 4.60002 6.11253C4.63681 6.06787 4.68358 6.0325 4.73656 6.00926C4.78955 5.98603 4.84726 5.97558 4.90502 5.97878C5.00216 5.98289 5.09545 6.01793 5.17127 6.07878L5.19877 6.10003C5.21877 6.11628 5.24127 6.13253 5.25627 6.14628C5.34627 6.23003 5.43002 6.32003 5.50877 6.41253C5.66502 6.58378 5.83752 6.74003 6.02377 6.87753C6.09377 6.91503 6.17502 6.92253 6.25127 6.90003L6.38877 6.99753C7.22576 6.10982 8.36258 5.56458 9.57877 5.46753L9.58877 5.30628C9.64804 5.25362 9.69099 5.18508 9.71252 5.10878C9.72089 4.87753 9.70665 4.64601 9.67002 4.41753C9.64562 4.2978 9.62809 4.17677 9.61752 4.05503V3.95253V3.94628C9.61209 3.89289 9.61794 3.83896 9.63472 3.78798C9.65149 3.737 9.6788 3.69012 9.71488 3.65039C9.75095 3.61066 9.79498 3.57897 9.84411 3.55737C9.89324 3.53577 9.94636 3.52475 10 3.52503C10.0536 3.52514 10.1065 3.53642 10.1555 3.55815C10.2044 3.57987 10.2483 3.61157 10.2843 3.65122C10.3203 3.69086 10.3476 3.73758 10.3645 3.78839C10.3814 3.83919 10.3876 3.89297 10.3825 3.94628V4.05503C10.3725 4.17675 10.3553 4.29779 10.3313 4.41753C10.2943 4.64598 10.2796 4.87749 10.2875 5.10878C10.3026 5.18642 10.3475 5.25507 10.4125 5.30003V5.30878L10.4213 5.47003C11.63 5.58003 12.7588 6.12253 13.5963 6.99878L13.7413 6.89628C13.8196 6.90985 13.9001 6.90119 13.9738 6.87128C14.16 6.73378 14.3325 6.57628 14.4888 6.40503C14.5675 6.31128 14.6513 6.22253 14.7413 6.13878L14.805 6.08878L14.8263 6.07128C14.8645 6.03336 14.9103 6.00392 14.9607 5.98487C15.0111 5.96582 15.0649 5.95759 15.1186 5.9607C15.1724 5.96382 15.2249 5.97821 15.2727 6.00296C15.3206 6.0277 15.3627 6.06223 15.3963 6.10431C15.4299 6.14639 15.4543 6.19507 15.4678 6.24719C15.4814 6.29931 15.4838 6.3537 15.475 6.40683C15.4661 6.45995 15.4462 6.51062 15.4165 6.55553C15.3868 6.60045 15.348 6.63861 15.3025 6.66753L15.2725 6.69253C15.2538 6.70753 15.235 6.72378 15.2188 6.73503C15.1166 6.80278 15.0106 6.86455 14.9013 6.92003C14.6992 7.03463 14.5087 7.16859 14.3325 7.32003C14.2813 7.37951 14.2552 7.45665 14.26 7.53503L14.1975 7.59003L14.125 7.65628C14.8025 8.66378 15.0875 9.88503 14.9213 11.0875L15.075 11.1325C15.1138 11.2013 15.1713 11.2588 15.2413 11.2975C15.465 11.3575 15.695 11.395 15.9263 11.41ZM9.11377 6.55003C9.24752 6.52003 9.38377 6.49628 9.52127 6.48003L9.40877 8.48003L9.39877 8.48503C9.39694 8.5305 9.38586 8.57513 9.3662 8.61618C9.34655 8.65723 9.31874 8.69384 9.28446 8.72379C9.25019 8.75373 9.21017 8.77638 9.16686 8.79035C9.12354 8.80432 9.07783 8.80931 9.03252 8.80503C8.97165 8.79985 8.91333 8.77825 8.86377 8.74253L8.86127 8.74378L7.21627 7.58128C7.74002 7.06878 8.39752 6.71128 9.11377 6.55003ZM11.1363 8.73753L12.7713 7.58253C12.1487 6.97423 11.3438 6.58693 10.48 6.48003L10.5925 8.47753H10.595C10.5968 8.52312 10.608 8.56786 10.6277 8.609C10.6474 8.65014 10.6754 8.68682 10.7098 8.71678C10.7442 8.74674 10.7843 8.76936 10.8278 8.78325C10.8713 8.79713 10.9171 8.80199 10.9625 8.79753C11.0234 8.79235 11.0817 8.77075 11.1313 8.73503L11.1363 8.73753ZM13.9463 10.8075L12.0113 10.25L12.0088 10.2425C11.9649 10.2304 11.924 10.2095 11.8884 10.1812C11.8528 10.1528 11.8233 10.1175 11.8017 10.0775C11.7801 10.0374 11.7668 9.99341 11.7627 9.94809C11.7585 9.90278 11.7636 9.85709 11.7775 9.81378C11.7966 9.75564 11.8312 9.70379 11.8775 9.66378L11.875 9.66253L13.3688 8.32878C13.8263 9.07128 14.0275 9.94128 13.9438 10.8075H13.9463ZM11.37 11.875L12.1425 13.7375C12.8812 13.2675 13.442 12.5646 13.7363 11.74L11.745 11.4038L11.7425 11.4075C11.6721 11.3939 11.5991 11.4041 11.535 11.4363C11.4574 11.4742 11.3973 11.5405 11.3671 11.6214C11.3368 11.7023 11.3388 11.7917 11.3725 11.8713L11.37 11.875ZM10.8888 14.2563C10.1725 14.4188 9.42627 14.3813 8.73002 14.1463L9.70127 12.3963C9.7301 12.3427 9.77412 12.2979 9.82632 12.2667C9.87851 12.2354 9.93819 12.2188 9.99903 12.2187C10.0599 12.2186 10.1196 12.2349 10.1719 12.2659C10.2243 12.297 10.2672 12.3416 10.2963 12.395H10.3038L11.2775 14.1475C11.1498 14.1901 11.0201 14.2264 10.8888 14.2563ZM7.86627 13.7288L8.63002 11.8863L8.62502 11.8788C8.64939 11.8228 8.65799 11.7612 8.6499 11.7007C8.6418 11.6402 8.61732 11.583 8.5791 11.5354C8.54088 11.4878 8.49037 11.4515 8.43303 11.4305C8.37569 11.4095 8.31371 11.4046 8.25377 11.4163L8.25002 11.4125L6.27627 11.7463C6.57342 12.5642 7.13236 13.2611 7.86627 13.7288ZM6.62002 8.32878L8.12127 9.66753L8.12002 9.67628C8.16579 9.71628 8.19986 9.76794 8.21861 9.82576C8.23735 9.88359 8.24008 9.94541 8.22648 10.0047C8.21289 10.0639 8.18349 10.1184 8.14141 10.1622C8.09933 10.2061 8.04615 10.2377 7.98752 10.2538L7.98627 10.26L6.06127 10.8138C5.96553 9.94633 6.16218 9.07175 6.62002 8.32878ZM10.3075 9.77128H9.69252L9.30877 10.2463L9.44627 10.8413L10 11.1075L10.5525 10.8425L10.69 10.2475L10.3075 9.77128Z"
        fill="#0B0C0E"
      />
    </svg>
  )
}

const FAQs = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
    <path
      d="M11.0714 2.85718L13.0104 8.29925L17.8571 10L13.0104 11.7008L11.0714 17.1429L9.13236 11.7008L4.28564 10L9.13236 8.29925L11.0714 2.85718Z"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M3.80949 2.5V5.83334M2.14282 4.16666H5.47616"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M3.80949 14.1666V17.4999M2.14282 15.8333H5.47616"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </svg>
  )
}

const LOGGING = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
    <path
      d="M11.0714 2.85718L13.0104 8.29925L17.8571 10L13.0104 11.7008L11.0714 17.1429L9.13236 11.7008L4.28564 10L9.13236 8.29925L11.0714 2.85718Z"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M3.80949 2.5V5.83334M2.14282 4.16666H5.47616"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M3.80949 14.1666V17.4999M2.14282 15.8333H5.47616"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </svg>
  )
}


const PROMETHEUS = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
    <path
      d="M11.0714 2.85718L13.0104 8.29925L17.8571 10L13.0104 11.7008L11.0714 17.1429L9.13236 11.7008L4.28564 10L9.13236 8.29925L11.0714 2.85718Z"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M3.80949 2.5V5.83334M2.14282 4.16666H5.47616"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
    <path
      d="M3.80949 14.1666V17.4999M2.14282 15.8333H5.47616"
      stroke="white"
      stroke-width="1.66666"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </svg>
  )
}

const Distributed = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M9.99992 5.83333C10.9204 5.83333 11.6666 5.08714 11.6666 4.16667C11.6666 3.24619 10.9204 2.5 9.99992 2.5C9.07944 2.5 8.33325 3.24619 8.33325 4.16667C8.33325 5.08714 9.07944 5.83333 9.99992 5.83333Z"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M2.5 17.5L9.18333 5.6167"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M10.825 5.6167L12.4333 8.48337"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M15.8334 10C12.6084 13.3333 7.39175 13.3333 4.16675 10"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M17.5002 17.5L15.7002 14.3"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  )
}

const Observability = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M5 1.25H6.25C6.94141 1.25 7.5 1.80859 7.5 2.5V3.75H3.75V2.5C3.75 1.80859 4.30859 1.25 5 1.25ZM7.5 5V17.5C7.5 18.1914 6.94141 18.75 6.25 18.75H1.25C0.558594 18.75 0 18.1914 0 17.5V15.1914C0 13.8398 0.367188 12.5117 1.0625 11.3516C1.59766 10.4609 1.94141 9.46875 2.07031 8.4375L2.36328 6.09375C2.44141 5.46875 2.97266 5 3.60547 5H7.5ZM16.3984 5C17.0273 5 17.5625 5.46875 17.6406 6.09375L17.9297 8.4375C18.0586 9.46875 18.4023 10.4609 18.9375 11.3516C19.6328 12.5117 20 13.8398 20 15.1914V17.5C20 18.1914 19.4414 18.75 18.75 18.75H13.75C13.0586 18.75 12.5 18.1914 12.5 17.5V5H16.3984ZM12.5 2.5C12.5 1.80859 13.0586 1.25 13.75 1.25H15C15.6914 1.25 16.25 1.80859 16.25 2.5V3.75H12.5V2.5ZM11.25 5V11.25H8.75V5H11.25Z"
        fill="#C0C1C3"
      />
    </svg>
  )
}

const Logs = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path d="M4.1665 4.58325L4.1665 15.8333" stroke="#C0C1C3" stroke-width="1.66667" />
      <ellipse
        cx="9.1665"
        cy="4.58333"
        rx="5"
        ry="2.08333"
        stroke="#C0C1C3"
        stroke-width="1.66667"
      />
      <ellipse cx="9.1665" cy="4.52083" rx="1.25" ry="0.520833" fill="#C0C1C3" />
      <path
        d="M14.1665 15.8333C14.1665 16.7537 11.9279 17.4999 9.1665 17.4999C6.40508 17.4999 4.1665 16.7537 4.1665 15.8333"
        stroke="#C0C1C3"
        stroke-width="1.66667"
      />
      <path
        d="M7.5 9.16675V10.7628C7.5 10.8036 7.52945 10.8383 7.56963 10.845L9.93037 11.2385C9.97055 11.2452 10 11.2799 10 11.3207V14.1667"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
      />
      <path
        d="M14.1665 4.58325V9.01623C14.1665 9.08168 14.2385 9.12159 14.294 9.0869L17.4026 7.14401C17.4506 7.11401 17.5139 7.13956 17.5276 7.19446L17.9058 8.70691C17.9125 8.7338 17.9054 8.76227 17.8868 8.78287L14.1879 12.8928C14.1741 12.9081 14.1665 12.928 14.1665 12.9486V15.8333"
        stroke="#C0C1C3"
        stroke-width="1.66667"
      />
    </svg>
  )
}

const Prometheus = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M9.99996 18.7501C8.43371 18.7501 7.16309 17.7038 7.16309 16.4132H12.8362C12.8368 17.7032 11.5668 18.7501 9.99996 18.7501Z"
        fill="#C0C1C3"
      />
      <path d="M14.6851 15.6394H5.31445V13.9401H14.6857V15.6394H14.6851Z" fill="#C0C1C3" />
      <path
        d="M14.6519 13.0626H5.34126C5.31001 13.027 5.27876 12.992 5.24876 12.9557C4.62108 12.2641 4.14279 11.4505 3.84376 10.5657C3.84001 10.5451 5.00688 10.8039 5.83438 10.9901C5.83438 10.9901 6.26001 11.0889 6.88251 11.202C6.27947 10.5074 5.94201 9.62171 5.93001 8.70198C5.93001 6.70198 7.46251 4.95698 6.91001 3.54573C7.44813 3.58948 8.02376 4.68136 8.06251 6.38886C8.60799 5.44044 8.88861 4.36287 8.87501 3.26886C8.87501 2.35198 9.47876 1.28761 10.0831 1.25073C9.54438 2.13823 10.2225 2.89948 10.8256 4.78698C11.0519 5.49573 11.0231 6.68948 11.1975 7.44573C11.2556 5.87386 11.5256 3.58073 12.5225 2.78948C12.085 3.78948 12.585 5.03386 12.9331 5.63386C13.5386 6.54802 13.8508 7.62511 13.8281 8.72136C13.825 9.63418 13.4981 10.5163 12.9056 11.2107C13.5638 11.0857 14.0188 10.9757 14.0188 10.9757L16.1569 10.5589C15.8668 11.5036 15.3501 12.3632 14.6519 13.0626Z"
        fill="#C0C1C3"
      />
    </svg>
  )
}

const Metrics = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M15 16.6666V8.33325"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M10 16.6666V3.33325"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
      <path
        d="M5 16.6667V11.6667"
        stroke="#C0C1C3"
        stroke-width="1.66667"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  )
}

const Docker = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
      <path
        d="M15.4274 5.67L15.6149 5.38625L15.9424 5.585L16.0874 5.68875C16.4374 5.95875 17.1736 6.64875 17.3324 7.79375C17.6111 7.74375 17.8924 7.71875 18.1736 7.71875C18.8411 7.71875 19.2899 7.87375 19.5449 8.0025L19.6761 8.07375L19.7611 8.13L19.9999 8.325L19.9174 8.575C19.7892 8.91773 19.5888 9.22891 19.3299 9.4875C18.9674 9.86125 18.3299 10.3025 17.3186 10.36L17.0961 10.3663H16.9111C16.4486 11.5875 15.8274 12.9637 14.7836 14.1988C14.1643 14.9326 13.4297 15.5608 12.6086 16.0588C11.6243 16.6428 10.5463 17.0521 9.42239 17.2687C8.61739 17.425 7.79989 17.5025 6.98114 17.5C5.16864 17.5 3.56864 17.14 2.58489 16.51C1.70614 15.9488 1.03114 15.0325 0.57739 13.7887C0.180298 12.6523 -0.0147303 11.455 0.00114034 10.2513C-0.000916341 10.0969 0.0524411 9.94696 0.151524 9.82861C0.250608 9.71026 0.388847 9.63136 0.54114 9.60625L0.62614 9.6H13.8011L13.9161 9.59125L14.1024 9.57125C14.4224 9.52875 14.9099 9.43375 15.2524 9.23375C14.8424 8.555 14.7261 7.76125 14.9174 6.91625C14.9975 6.56378 15.1236 6.22336 15.2924 5.90375L15.4274 5.67ZM3.61239 7.23L3.66239 7.23875C3.68523 7.2473 3.70579 7.26099 3.72248 7.27876C3.73917 7.29654 3.75155 7.31792 3.75864 7.34125L3.76614 7.39125V9.035L3.75864 9.08625C3.75142 9.10971 3.73886 9.13118 3.72194 9.14896C3.70502 9.16675 3.68421 9.18037 3.66114 9.18875L3.61239 9.19625H1.84739C1.81449 9.19581 1.78259 9.18491 1.7563 9.16514C1.73001 9.14536 1.71069 9.11773 1.70114 9.08625L1.69239 9.03625V7.39L1.70114 7.34C1.70819 7.31631 1.72068 7.29459 1.73761 7.27658C1.75453 7.25857 1.77543 7.24476 1.79864 7.23625L1.84739 7.22875L3.61239 7.23ZM6.04614 7.23L6.09489 7.23875C6.11796 7.24713 6.13877 7.26075 6.15569 7.27854C6.17261 7.29632 6.18517 7.31779 6.19239 7.34125L6.19989 7.39125V9.035L6.19114 9.08625C6.18392 9.10971 6.17136 9.13118 6.15444 9.14896C6.13752 9.16675 6.11671 9.18037 6.09364 9.18875L6.04489 9.19625H4.27989C4.24704 9.19562 4.21523 9.18465 4.18898 9.1649C4.16272 9.14515 4.14336 9.11763 4.13364 9.08625L4.12489 9.0375V7.39125C4.12462 7.3578 4.13469 7.32509 4.1537 7.29757C4.17272 7.27006 4.19976 7.24908 4.23114 7.2375L4.27989 7.22875L6.04614 7.23ZM8.51614 7.23L8.56489 7.23875C8.58773 7.2473 8.60829 7.26099 8.62498 7.27876C8.64167 7.29654 8.65405 7.31792 8.66114 7.34125L8.66989 7.39125V9.035L8.66114 9.08625C8.65392 9.10971 8.64136 9.13118 8.62444 9.14896C8.60752 9.16675 8.58671 9.18037 8.56364 9.18875L8.51489 9.19625H6.74989C6.71699 9.19581 6.68509 9.18491 6.6588 9.16514C6.63251 9.14536 6.61319 9.11773 6.60364 9.08625L6.59614 9.03625V7.39L6.60364 7.34C6.61069 7.31631 6.62318 7.29459 6.64011 7.27658C6.65703 7.25857 6.67793 7.24476 6.70114 7.23625L6.74989 7.22875L8.51614 7.23ZM10.9561 7.23L11.0049 7.23875C11.028 7.24713 11.0488 7.26075 11.0657 7.27854C11.0826 7.29632 11.0952 7.31779 11.1024 7.34125L11.1111 7.39125V9.035C11.1114 9.06845 11.1013 9.10116 11.0823 9.12868C11.0633 9.15619 11.0363 9.17717 11.0049 9.18875L10.9549 9.19625H9.19114C9.15824 9.19581 9.12634 9.18491 9.10005 9.16514C9.07376 9.14536 9.05444 9.11773 9.04489 9.08625L9.03739 9.03625V7.39L9.04489 7.34C9.05194 7.31631 9.06443 7.29459 9.08136 7.27658C9.09828 7.25857 9.11918 7.24476 9.14239 7.23625L9.19239 7.22875H10.9574L10.9561 7.23ZM13.4186 7.23L13.4674 7.23875C13.4905 7.24713 13.5113 7.26075 13.5282 7.27854C13.5451 7.29632 13.5577 7.31779 13.5649 7.34125L13.5724 7.39125V9.035C13.5727 9.06845 13.5626 9.10116 13.5436 9.12868C13.5246 9.15619 13.4975 9.17717 13.4661 9.18875L13.4174 9.19625H11.6524C11.6195 9.19581 11.5876 9.18491 11.5613 9.16514C11.535 9.14536 11.5157 9.11773 11.5061 9.08625L11.4986 9.03625V7.39L11.5061 7.34C11.5132 7.31631 11.5257 7.29459 11.5426 7.27658C11.5595 7.25857 11.5804 7.24476 11.6036 7.23625L11.6536 7.22875H13.4174L13.4186 7.23ZM6.04364 4.865L6.09364 4.87375C6.11634 4.88217 6.13682 4.89567 6.1535 4.91322C6.17018 4.93077 6.18263 4.9519 6.18989 4.975L6.19864 5.02625V6.67C6.19891 6.70345 6.18885 6.73616 6.16983 6.76368C6.15081 6.79119 6.12377 6.81217 6.09239 6.82375L6.04364 6.8325H4.27989C4.24673 6.8317 4.21468 6.82037 4.18839 6.80014C4.16209 6.77992 4.14292 6.75185 4.13364 6.72L4.12489 6.67V5.02625C4.12488 4.99302 4.13506 4.96058 4.15406 4.93331C4.17306 4.90604 4.19996 4.88525 4.23114 4.87375L4.27989 4.865H6.04364ZM8.51364 4.865L8.56364 4.87375C8.58634 4.88217 8.60682 4.89567 8.6235 4.91322C8.64018 4.93077 8.65263 4.9519 8.65989 4.975L8.66864 5.02625V6.67C8.66891 6.70345 8.65884 6.73616 8.63983 6.76368C8.62081 6.79119 8.59377 6.81217 8.56239 6.82375L8.51364 6.8325H6.74989C6.71673 6.8317 6.68468 6.82037 6.65839 6.80014C6.63209 6.77992 6.61292 6.75185 6.60364 6.72L6.59614 6.67V5.02625L6.60364 4.97625C6.61086 4.95279 6.62342 4.93132 6.64034 4.91354C6.65726 4.89575 6.67807 4.88213 6.70114 4.87375L6.74989 4.865H8.51364ZM10.9549 4.865C11.0224 4.865 11.0799 4.91125 11.1011 4.975L11.1099 5.02625V6.67C11.1102 6.70345 11.1001 6.73616 11.0811 6.76368C11.0621 6.79119 11.035 6.81217 11.0036 6.82375L10.9536 6.8325H9.19114C9.15798 6.8317 9.12593 6.82037 9.09964 6.80014C9.07334 6.77992 9.05417 6.75185 9.04489 6.72L9.03739 6.67V5.02625L9.04489 4.97625C9.05211 4.95279 9.06467 4.93132 9.08159 4.91354C9.09851 4.89575 9.11932 4.88213 9.14239 4.87375L9.19239 4.865H10.9574H10.9549ZM10.9549 2.5C11.0224 2.5 11.0799 2.54625 11.1011 2.61L11.1099 2.66V4.305C11.1102 4.33845 11.1001 4.37116 11.0811 4.39868C11.0621 4.42619 11.035 4.44717 11.0036 4.45875L10.9536 4.46625H9.19114C9.15824 4.46581 9.12634 4.45491 9.10005 4.43514C9.07376 4.41536 9.05444 4.38773 9.04489 4.35625L9.03739 4.30625V2.66L9.04489 2.61C9.05211 2.58654 9.06467 2.56507 9.08159 2.54729C9.09851 2.5295 9.11932 2.51588 9.14239 2.5075L9.19114 2.5H10.9561H10.9549Z"
        fill="#C0C1C3"
      />
    </svg>
  )
}

const ArrowLeft = () => {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none">
      <path d="M6.99996 11.0833L2.91663 6.99996L6.99996 2.91663" stroke="#C0C1C3" stroke-width="1.16667" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M11.0833 7H2.91663" stroke="#C0C1C3" stroke-width="1.16667" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
  )
}

export const SidebarIcons = {
  All,
  Opentelemetry,
  Kubernetes,
  FAQs,
  LOGGING,
  PROMETHEUS,
  Distributed,
  Observability,
  Logs,
  Prometheus,
  Metrics,
  Docker,
  ArrowLeft
}
